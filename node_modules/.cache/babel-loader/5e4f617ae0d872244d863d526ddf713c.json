{"ast":null,"code":"import _defineProperty from \"/Users/vinay/Desktop/react/openex/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/vinay/Desktop/react/openex/src/containers/ExchangeRate/ExchangeRate.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport { TextField, MenuItem } from \"@material-ui/core\";\nimport classes from \"./ExchangeRate.module.css\";\nimport axios from \"axios\";\n\nclass ExchangeRate extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      from: \"EUR\",\n      to: \"GBP\",\n      countries: {}\n    };\n\n    this.handleChange = name => event => {\n      this.setState(_objectSpread({}, this.state, {\n        [name]: event.target.value\n      }));\n    };\n  }\n\n  componentDidMount() {\n    let countries = {}; // the api to get everything https://restcountries.eu/rest/v2/all\n\n    axios.get(\"https://cors-anywhere.herokuapp.com/http://country.io/names.json\").then(response => {\n      countries = _objectSpread({}, response.data);\n      Object.keys(response.data).map(igKey => {\n        countries[igKey] = {\n          name: response.data[igKey]\n        };\n      });\n      axios.get(\"https://cors-anywhere.herokuapp.com/http://country.io/currency.json\").then(curr => {\n        Object.keys(curr.data).map(igKey => {\n          countries[igKey] = _objectSpread({}, countries[igKey], {\n            currency_code: curr.data[igKey]\n          });\n        });\n        console.log(countries);\n        this.setState(_objectSpread({}, this.state, {\n          countries: countries\n        }));\n      });\n    }).catch(error => {\n      console.log(\"Error in getting the data\", error);\n    });\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: classes.container,\n      noValidate: true,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-select-currency\",\n      select: true,\n      label: \"Select\",\n      className: classes.textField,\n      value: this.state.countries.currency_code,\n      onChange: this.handleChange(\"from\"),\n      SelectProps: {\n        MenuProps: {\n          className: classes.menu\n        }\n      },\n      helperText: \"Please select your currency\",\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, Object.keys(this.state.countries).map(option => {\n      const country = this.state.countries[option];\n      return React.createElement(MenuItem, {\n        key: option,\n        value: option,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, option.name);\n    })));\n  }\n\n}\n\nexport default ExchangeRate;","map":{"version":3,"sources":["/Users/vinay/Desktop/react/openex/src/containers/ExchangeRate/ExchangeRate.js"],"names":["React","Component","TextField","MenuItem","classes","axios","ExchangeRate","state","from","to","countries","handleChange","name","event","setState","target","value","componentDidMount","get","then","response","data","Object","keys","map","igKey","curr","currency_code","console","log","catch","error","render","container","textField","MenuProps","className","menu","option","country"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { TextField, MenuItem } from \"@material-ui/core\";\nimport classes from \"./ExchangeRate.module.css\";\nimport axios from \"axios\";\n\nclass ExchangeRate extends Component {\n  state = {\n    from: \"EUR\",\n    to: \"GBP\",\n    countries: {}\n  };\n\n  componentDidMount() {\n    let countries = {};\n    // the api to get everything https://restcountries.eu/rest/v2/all\n    axios\n      .get(\"https://cors-anywhere.herokuapp.com/http://country.io/names.json\")\n      .then(response => {\n        countries = { ...response.data };\n        Object.keys(response.data).map(igKey => {\n          countries[igKey] = { name: response.data[igKey] };\n        });\n        axios\n          .get(\n            \"https://cors-anywhere.herokuapp.com/http://country.io/currency.json\"\n          )\n          .then(curr => {\n            Object.keys(curr.data).map(igKey => {\n              countries[igKey] = {\n                ...countries[igKey],\n                currency_code: curr.data[igKey]\n              };\n            });\n            console.log(countries);\n            this.setState({ ...this.state, countries: countries });\n          });\n      })\n      .catch(error => {\n        console.log(\"Error in getting the data\", error);\n      });\n  }\n\n  handleChange = name => event => {\n    this.setState({ ...this.state, [name]: event.target.value });\n  };\n\n  render() {\n    return (\n      <form className={classes.container} noValidate autoComplete=\"off\">\n        <TextField\n          id=\"standard-select-currency\"\n          select\n          label=\"Select\"\n          className={classes.textField}\n          value={this.state.countries.currency_code}\n          onChange={this.handleChange(\"from\")}\n          SelectProps={{\n            MenuProps: {\n              className: classes.menu\n            }\n          }}\n          helperText=\"Please select your currency\"\n          margin=\"normal\"\n        >\n           {Object.keys(this.state.countries).map(option => {\n            const country = this.state.countries[option];\n            return (\n              <MenuItem key={option} value={option}>\n                {option.name}\n              </MenuItem>\n            );\n          })}\n        </TextField>\n      </form>\n    );\n  }\n}\n\nexport default ExchangeRate;\n"]},"metadata":{},"sourceType":"module"}