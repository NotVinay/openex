{"ast":null,"code":"import _defineProperty from \"/Users/vinay/Desktop/react/openex/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/vinay/Desktop/react/openex/src/containers/ExchangeRate/ExchangeRate.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport classes from \"./ExchangeRate.module.css\";\nimport axios from \"axios\";\nimport * as actions from \"../../store/actions/index\";\nimport { connect } from \"react-redux\";\n\nclass ExchangeRate extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      from: \"GB\",\n      to: \"US\"\n    };\n\n    this.handleChange = name => event => {\n      this.setState(_objectSpread({}, this.state, {\n        [name]: event.target.value\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.props.loadCountries();\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      className: classes.Container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 5,\n      alignItems: \"flex-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"from-currency\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(Select, {\n      id: \"from-currency\",\n      select: true,\n      label: \"from-currency\",\n      value: this.state.from,\n      onChange: this.handleChange(\"from\"),\n      menuprops: {\n        className: classes.FormSelect\n      },\n      helpertext: \"Please select your base Currency\",\n      labelWidth: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, this.props.countries.map(country => {\n      const currency = country.currencies[0];\n      return React.createElement(MenuItem, {\n        key: country.alpha2Code,\n        value: country.alpha2Code,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, currency.name + \" (\" + currency.code + \")\");\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"to\"), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"to-currency\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Select, {\n      id: \"to-currency\",\n      select: true,\n      label: \"to-currency\",\n      value: this.state.to,\n      onChange: this.handleChange(\"to\"),\n      menuprops: {\n        className: classes.menu\n      },\n      helpertext: \"Please select the currency you want to transform.\",\n      labelWidth: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.props.countries.map(country => {\n      const currency = country.currencies[0];\n      return React.createElement(MenuItem, {\n        key: country.alpha2Code,\n        value: country.alpha2Code,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, currency.name + \" (\" + currency.code + \")\");\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    countries: state.countries.countries,\n    countriesLoading: state.countries.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadCountries: () => dispatch(actions.fetchCountriesInit())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExchangeRate);","map":{"version":3,"sources":["/Users/vinay/Desktop/react/openex/src/containers/ExchangeRate/ExchangeRate.js"],"names":["React","Component","Container","Grid","MenuItem","FormControl","Select","InputLabel","classes","axios","actions","connect","ExchangeRate","state","from","to","handleChange","name","event","setState","target","value","componentDidMount","props","loadCountries","render","className","FormSelect","countries","map","country","currency","currencies","alpha2Code","code","menu","mapStateToProps","countriesLoading","loading","mapDispatchToProps","dispatch","fetchCountriesInit"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport classes from \"./ExchangeRate.module.css\";\nimport axios from \"axios\";\nimport * as actions from \"../../store/actions/index\";\nimport { connect } from \"react-redux\";\n\nclass ExchangeRate extends Component {\n  state = {\n    from: \"GB\",\n    to: \"US\"\n  };\n\n  componentDidMount() {\n    this.props.loadCountries();\n  }\n\n  handleChange = name => event => {\n    this.setState({ ...this.state, [name]: event.target.value });\n  };\n\n  render() {\n    return (\n      <form noValidate autoComplete=\"off\">\n        <Grid container justify=\"center\" alignItems=\"center\" className={classes.Container}>\n          <Grid item xs={12} md={5} alignItems=\"flex-end\">\n            <FormControl variant=\"outlined\">\n              <InputLabel htmlFor=\"from-currency\"></InputLabel>\n              <Select\n                id=\"from-currency\"\n                select\n                label=\"from-currency\"\n                value={this.state.from}\n                onChange={this.handleChange(\"from\")}\n                menuprops={{\n                  className: classes.FormSelect\n                }}\n                helpertext=\"Please select your base Currency\"\n                labelWidth={0}\n                \n              >\n                {this.props.countries.map(country => {\n                  const currency = country.currencies[0];\n                  return (\n                    <MenuItem\n                      key={country.alpha2Code}\n                      value={country.alpha2Code}\n                    >\n                      {currency.name + \" (\" + currency.code + \")\"}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} md={2}>\n            to\n          </Grid>\n          <Grid item xs={12} md={5}>\n            <FormControl variant=\"outlined\">\n              <InputLabel htmlFor=\"to-currency\"></InputLabel>\n              <Select\n                id=\"to-currency\"\n                select\n                label=\"to-currency\"\n                value={this.state.to}\n                onChange={this.handleChange(\"to\")}\n                menuprops={{\n                  className: classes.menu\n                }}\n                helpertext=\"Please select the currency you want to transform.\"\n                labelWidth={0}\n              >\n                {this.props.countries.map(country => {\n                  const currency = country.currencies[0];\n                  return (\n                    <MenuItem\n                      key={country.alpha2Code}\n                      value={country.alpha2Code}\n                    >\n                      {currency.name + \" (\" + currency.code + \")\"}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            </FormControl>\n          </Grid>\n        </Grid>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    countries: state.countries.countries,\n    countriesLoading: state.countries.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadCountries: () => dispatch(actions.fetchCountriesInit())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExchangeRate);\n"]},"metadata":{},"sourceType":"module"}